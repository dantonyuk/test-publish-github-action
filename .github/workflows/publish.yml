name: Publish Test

on:
  push:
    branches:
      - master
  issue_comment:
    types:
      - created

  workflow_dispatch:
    inputs:
      version:
        description: Version (leave empty to get it from the sources)
        required: false
        default: ""

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
      - name: Info
        run: |
          echo ACTION: ${{ github.event_name }}
          env
          echo "$GITHUB_CONTEXT"
          which gh
          which hub
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
  publish:
    if: |
      (github.event.issue.pull_request && (
        startsWith(github.event.comment.body, '/snapshot') ||
        startsWith(github.event.comment.body, '/release'))) ||
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    # permissions:
    #   id-token: write
    #   contents: write
    #   issues: write
    #   pull-requests: write
    steps:
    - uses: actions/checkout@v2

    - name: Checkout proper branch
      if: github.event.issue.pull_request
      run: |
        gh pr checkout ${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Determine Version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "issue_comment" ]
        then
          echo "${{ github.event.comment.body }}"
          if [[ "${{ github.event.comment.body }}" =~ ^/(snapshot|release)([[:space:]]+([^[:space:]]*))?$ ]]
          then
            version=${BASH_REMATCH[3]}
            if [ "${BASH_REMATCH[1]}" = "snapshot" ]
            then
              IS_SNAPSHOT=yes
            fi
          else
            exit 100
          fi
        fi

        [ -z "${version}" ] && source gradle.properties
        [ -n "${IS_SNAPSHOT}" ] && version=${version}-SNAPSHOT
        echo "::set-output name=value::${version}"
        echo "VERSION: $version"
      env:
        version: ${{ github.event.inputs.version }}

    - name: Publish
      id: publish
      if: steps.version.outcome == 'success'
      run: |
        echo "Publishing..."

    - name: Tag Release
      if: steps.publish.outcome == 'success'
      run: |
        if [[ "${VERSION}" != *-SNAPSHOT ]]
        then
          TAG=v${VERSION}
          git tag ${TAG}
          git push origin ${TAG}
        fi
      env:
        VERSION: ${{ github.event.inputs.version }}

    - name: Completion notification
      if: github.event_name == 'issue_comment' && steps.publish.outcome == 'success'
      run: |
        gh issue comment ${ISSUE_NUMBER} --body \
        "âš¡ Version ${VERSION} published successfully.
        ðŸ“Œ Tag [v${VERSION}](${REPO_URL}/${VERSION})"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
        REPO_URL: ${{ github.event.repository.html_url }}
        VERSION: ${{ github.event.inputs.version }}
